package main

/**

包的习惯用法：
包名一般是小写的，使用一个简短且有意义的名称。
包名一般要和所在的目录同名，也可以不同，包名中不能包含- 等特殊符号。
包一般使用域名作为目录名称，这样能保证包名的唯一性，比如 GitHub 项目的包一般会放到GOPATH/src/github.com/userName/projectName 目录下。
包名为 main 的包为应用程序的入口包，编译不包含 main 包的源码文件时不会得到可执行文件。
一个文件夹下的所有源码文件只能属于同一个包，同样属于同一个包的源码文件不能放在多个文件夹下。

方法和变量
	1.大写相当于public
	2.小写相当于private

注意:这个public和private是相对于包（go文件首行的package 后面跟的包名）来说的。（这个权限针对的是文件所在的路径+文件的包名）

包名相对于它所处的实际的文件系统目录有什么关系呢？
有关系，一般这个包名和所在的目录名保持一致，这样容易辨认。但这种规定不是必然!

测试效果：
	1.两个Go文件在同一个目录里，不同的package名
		测试在Goland里语法都不通过，不允许在同一个路径下，在不同Go文件里使用不同的包名

	2.两个Go文件在不同的目录，同一个包名
		测试和不同的目录，不同的包名效果一致

	3.两个Go文件在同一个目录，同一个包名
		和在同一个Go文件里效果一致



*/

import (
	_ "go-learn/learn03_package/test"
)
import "go-learn/learn03_package/test2"

func main() {
	//test.Test()
	test2.Test2(test2.Name)
}
